@model IEnumerable<StyleHub.Models.Product>
@{
    Layout = "~/Views/Shared/_Layout_Style_hub.cshtml";
}
@* @await Html.PartialAsync("_PageHeader", ("Category", "Category"))
 *@<div class="container">
    <div class="row">
        <div class="col-lg-4 sidebar">
            <div class="widgets-container">
                <!-- Product Categories Widget -->
                <div class="product-categories-widget widget-item">
                    <h3 class="widget-title">Categories</h3>
                    <ul class="category-tree list-unstyled mb-0">
                        <li class="category-item">
                            <div class="d-flex justify-content-between align-items-center category-header collapsed" data-bs-toggle="collapse" data-bs-target="#categories-1-Clothing-subcategories" aria-expanded="false" aria-controls="categories-1-Clothing-subcategories">
                                <a href="javascript:void(0)" class="category-link">Clothing</a>
                                <span class="category-toggle">
                                    <i class="bi bi-chevron-down"></i>
                                    <i class="bi bi-chevron-up"></i>
                                </span>
                            </div>
                            <ul id="categories-1-Clothing-subcategories" class="subcategory-list list-unstyled collapse ps-3 mt-2">
                                @foreach (var cat in ViewBag.Categories as List<StyleHub.Models.Category>)
                                {
                                    <li>
                                        <a asp-controller="Category" asp-action="Index" asp-route-id="@cat.Id" class="subcategory-link">@cat.Name</a>
                                    </li>
                                }
                            </ul>

                        </li>
                    </ul>
                </div>
                <!-- Pricing Range Widget -->
                <div class="pricing-range-widget widget-item">

                    <h3 class="widget-title">Price Range</h3>

                    <div class="price-range-container">
                        <div class="current-range mb-3">
                            <span class="min-price">$0</span>
                            <span class="max-price float-end">$1000</span>
                        </div>

                        <div class="range-slider">
                            <div class="slider-track"></div>
                            <div class="slider-progress"></div>
                            <input type="range" class="min-range" min="0" max="1000" value="0" step="10">
                            <input type="range" class="max-range" min="0" max="1000" value="500" step="10">
                        </div>

                        <div class="price-inputs mt-3">
                            <div class="row g-2">
                                <div class="col-6">
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text">$</span>
                                        <input type="number" class="form-control min-price-input" placeholder="Min" min="0" max="1000" value="0" step="10">
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text">$</span>
                                        <input type="number" class="form-control max-price-input" placeholder="Max" min="0" max="1000" value="500" step="10">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="filter-actions mt-3">
                            <button type="button" class="btn btn-sm btn-primary w-100" id="applyPriceFilter">Apply Filter</button>
                        </div>
                    </div>

                </div>
                <!--/Pricing Range Widget -->
              
            </div>
        </div>
        <div class="col-lg-8">
            <!-- Category Header Section -->
            <section id="category-header" class="category-header section">

                <div class="container" data-aos="fade-up">

                    <!-- Filter and Sort Options -->
                    <div class="filter-container mb-4" data-aos="fade-up" data-aos-delay="100">
                        <div class="row g-3">
                            <div class="col-12 col-md-6 col-lg-4">
                                <div class="filter-item search-form">
                                    <label for="productSearch" class="form-label">Search Products</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="productSearch" name="search" value="@ViewBag.Search" placeholder="Search for products..." aria-label="Search for products">
                                        <button class="btn search-btn" type="button">
                                            <i class="bi bi-search"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div class="col-12 col-md-6 col-lg-2">
                                <div class="filter-item">
                                    <label for="priceRange" class="form-label">Price Range</label>
                                  @*   <select class="form-select" id="priceRange" name="priceRange" onchange="this.form.submit()">
                                        <option selected="">All Prices</option>
                                        <option value="Under $25">Under $25</option>
                                        <option value="$25 to $50">$25 to $50</option>
                                        <option value="$50 to $100">$50 to $100</option>
                                        <option value="$100 to $200">$100 to $200</option>
                                        <option value="$200 & Above">$200 & Above</option>

                                    </select> *@
                                    <select class="form-select" id="priceRange">
                                        <option value="all">All Prices</option>
                                        <option value="0-25">Under $25</option>
                                        <option value="25-50">$25 to $50</option>
                                        <option value="50-100">$50 to $100</option>
                                        <option value="100-200">$100 to $200</option>
                                        <option value="200-1000">$200 & Above</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-12 col-md-6 col-lg-2">
                                <div class="filter-item">
                                    <label for="sortBy" class="form-label">Sort By</label>
                                    <select class="form-select" id="sortBy">
                                        <option selected="">Featured</option>
                                        <option>Price: Low to High</option>
                                        <option>Price: High to Low</option>
                                        <option>Customer Rating</option>
                                        <option>Newest Arrivals</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-12 col-md-6 col-lg-4">
                                <div class="filter-item">
                                    <label class="form-label">View</label>
                                    <div class="d-flex align-items-center">
                                        <div class="view-options me-3">
                                            <button type="button" class="btn view-btn active" data-view="grid" aria-label="Grid view">
                                                <i class="bi bi-grid-3x3-gap-fill"></i>
                                            </button>
                                            <button type="button" class="btn view-btn" data-view="list" aria-label="List view">
                                                <i class="bi bi-list-ul"></i>
                                            </button>
                                        </div>
                                        <div class="items-per-page">
                                            <select class="form-select" id="itemsPerPage" aria-label="Items per page">
                                                <option value="12">12 per page</option>
                                                <option value="24">24 per page</option>
                                                <option value="48">48 per page</option>
                                                <option value="96">96 per page</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-12" data-aos="fade-up" data-aos-delay="200">
                                <div class="active-filters">
                                    <span class="active-filter-label">Active Filters:</span>
                                    <div class="filter-tags">
                                        <span class="filter-tag">
                                            Electronics <button class="filter-remove"><i class="bi bi-x"></i></button>
                                        </span>
                                        <span class="filter-tag">
                                            $50 to $100 <button class="filter-remove"><i class="bi bi-x"></i></button>
                                        </span>
                                        <button class="clear-all-btn">Clear All</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>

            </section>
            <!-- /Category Header Section -->
            <!-- Category Product List Section -->
            <section id="category-product-list" class="category-product-list section">

                <div class="container" data-aos="fade-up" data-aos-delay="100">

                    <div class="row g-4">
                        <h2>@ViewBag.CategoryName</h2>
                       @foreach (var product in Model)
{
    <div class="col-6 col-xl-4">
        <div class="product-card" data-aos="zoom-in">
            <div class="product-image">
                <img src="@product.Images?.FirstOrDefault()" class="main-image img-fluid" alt="@product.Alts">
                <img src="@product.Images?.Skip(1).FirstOrDefault()" class="hover-image img-fluid" alt="@product.Alts">
            </div>
            <div class="product-details">
                                        <div class="product-category">@product.Category?.Name</div>
                                        <h4 class="product-title"><a asp-controller="Category" asp-action="Product_details" asp-route-id="@product.Id">@product.Name</a></h4>
                <div class="product-meta">
                    <div class="product-price">$@product.Price</div>
                    <div class="product-rating">
                        <i class="bi bi-star-fill"></i>
                        @product.Rating <span>(@product.Review)</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


                    </div>
                </div>

            </section>
            <!-- /Category Product List Section -->
            <!-- Category Pagination Section -->
            <section id="category-pagination" class="category-pagination section">

                <div class="container">
                    <nav class="d-flex justify-content-center" aria-label="Page navigation">
                        <ul>
                            <li>
                                <a href="#" aria-label="Previous page">
                                    <i class="bi bi-arrow-left"></i>
                                    <span class="d-none d-sm-inline">Previous</span>
                                </a>
                            </li>

                            <li><a href="#" class="active">1</a></li>
                            <li><a href="#">2</a></li>
                            <li><a href="#">3</a></li>
                            <li class="ellipsis">...</li>
                            <li><a href="#">8</a></li>
                            <li><a href="#">9</a></li>
                            <li><a href="#">10</a></li>

                            <li>
                                <a href="#" aria-label="Next page">
                                    <span class="d-none d-sm-inline">Next</span>
                                    <i class="bi bi-arrow-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>

            </section>
            <!-- /Category Pagination Section -->
        </div>
    </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const minInput = document.querySelector(".min-price-input");
    const maxInput = document.querySelector(".max-price-input");
    const minRange = document.querySelector(".min-range");
    const maxRange = document.querySelector(".max-range");
    const applyBtn = document.querySelector(".filter-actions button");

    // القيم الافتراضية
    let defaultMin = 0;
    let defaultMax = 1000;

    // تعيين القيم من الـ URL لو موجودة
    const urlParams = new URLSearchParams(window.location.search);
    const minPrice = urlParams.has("minPrice") ? urlParams.get("minPrice") : defaultMin;
    const maxPrice = urlParams.has("maxPrice") ? urlParams.get("maxPrice") : defaultMax;

    minInput.value = minPrice;
    minRange.value = minPrice;
    maxInput.value = maxPrice;
    maxRange.value = maxPrice;

    // تحديث شريط السلايدر لما المستخدم يغير الأرقام
    minInput.addEventListener("input", function() {
        minRange.value = minInput.value;
    });
    maxInput.addEventListener("input", function() {
        maxRange.value = maxInput.value;
    });

    // تحديث الأرقام لما المستخدم يحرك السلايدر
    minRange.addEventListener("input", function() {
        minInput.value = minRange.value;
    });
    maxRange.addEventListener("input", function() {
        maxInput.value = maxRange.value;
    });

    // عند الضغط على Apply Filter
    applyBtn.addEventListener("click", function() {
        const minPrice = minInput.value;
        const maxPrice = maxInput.value;
        const currentUrl = new URL(window.location.href);

        currentUrl.searchParams.set("minPrice", minPrice);
        currentUrl.searchParams.set("maxPrice", maxPrice);

        window.location.href = currentUrl.toString();
    });
});
    const searchBtn = document.querySelector(".search-btn");
    const searchInput = document.getElementById("productSearch");

    searchBtn.addEventListener("click", function() {
        const query = searchInput.value.trim();
        const currentUrl = new URL(window.location.href);

        if(query) {
            currentUrl.searchParams.set("search", query);
        } else {
            currentUrl.searchParams.delete("search");
        }

        window.location.href = currentUrl.toString();
    });
            document.addEventListener("DOMContentLoaded", function() {
        const priceSelect = document.getElementById("priceRange");
        const urlParams = new URLSearchParams(window.location.search);
        const minPrice = urlParams.get("minPrice");
        const maxPrice = urlParams.get("maxPrice");

        // تعيين الخيار المناسب بناءً على minPrice و maxPrice
        if(minPrice && maxPrice){
            priceSelect.value = `${minPrice}-${maxPrice}`;
        } else if(minPrice && !maxPrice){
            priceSelect.value = "200-1000"; // أعلى فئة
        } else {
            priceSelect.value = "all"; // افتراضي
        }

        // عند تغيير الاختيار
        priceSelect.addEventListener("change", function() {
            const selected = priceSelect.value;
            const currentUrl = new URL(window.location.href);

            switch(selected) {
                case "0-25":
                    currentUrl.searchParams.set("minPrice", 0);
                    currentUrl.searchParams.set("maxPrice", 25);
                    break;
                case "25-50":
                    currentUrl.searchParams.set("minPrice", 25);
                    currentUrl.searchParams.set("maxPrice", 50);
                    break;
                case "50-100":
                    currentUrl.searchParams.set("minPrice", 50);
                    currentUrl.searchParams.set("maxPrice", 100);
                    break;
                case "100-200":
                    currentUrl.searchParams.set("minPrice", 100);
                    currentUrl.searchParams.set("maxPrice", 200);
                    break;
                case "200-1000":
                    currentUrl.searchParams.set("minPrice", 200);
                    currentUrl.searchParams.delete("maxPrice");
                    break;
                default:
                    currentUrl.searchParams.delete("minPrice");
                    currentUrl.searchParams.delete("maxPrice");
            }

            window.location.href = currentUrl.toString();
        });
    });
        const sortSelect = document.getElementById("sortBy");

    sortSelect.addEventListener("change", function() {
        const sortValue = sortSelect.value;
        const currentUrl = new URL(window.location.href);

        currentUrl.searchParams.set("sort", sortValue);
        window.location.href = currentUrl.toString();
    });
        const viewButtons = document.querySelectorAll(".view-btn");

    viewButtons.forEach(btn => {
        btn.addEventListener("click", function() {
            const view = btn.getAttribute("data-view");
            localStorage.setItem("viewMode", view);
            document.body.setAttribute("data-view", view); // تستخدمها في CSS لتغيير العرض
            viewButtons.forEach(b => b.classList.remove("active"));
            btn.classList.add("active");
        });
    });

    // عند تحميل الصفحة
    document.addEventListener("DOMContentLoaded", () => {
        const savedView = localStorage.getItem("viewMode") || "grid";
        document.body.setAttribute("data-view", savedView);
        document.querySelector(`.view-btn[data-view="${savedView}"]`).classList.add("active");
    });
        const itemsSelect = document.getElementById("itemsPerPage");

    itemsSelect.addEventListener("change", function() {
        const perPage = itemsSelect.value;
        const currentUrl = new URL(window.location.href);

        currentUrl.searchParams.set("itemsPerPage", perPage);
        window.location.href = currentUrl.toString();
    });

</script>
