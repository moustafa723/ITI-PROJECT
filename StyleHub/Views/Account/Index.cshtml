@model List<AddressDto>

@{
    Layout = "~/Views/Shared/_Layout_Style_hub.cshtml";

    var orders = ViewData["Orders"] as List<Order> ?? new List<Order>();
}
@{
    var firstName = User.FindFirst("given_name")?.Value ?? "";
    var lastName = User.FindFirst("family_name")?.Value ?? "";
}
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager

<!-- Account Section -->
<section id="account" class="account section">
    @if (TempData["StatusMessage"] is string msg && !string.IsNullOrEmpty(msg))
    {
        <div class="alert alert-info">@msg</div>
    }
    <div class="container" data-aos="fade-up" data-aos-delay="100">

        <!-- Mobile Menu Toggle -->
        <div class="mobile-menu d-lg-none mb-4">
            <button class="mobile-menu-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#profileMenu">
                <i class="bi bi-grid"></i>
                <span>Menu</span>
            </button>
        </div>

        <div class="row g-4">
            <!-- Profile Menu -->
            <div class="col-lg-3">
                <div class="profile-menu collapse d-lg-block" id="profileMenu">
                    <!-- User Info -->
                    <div class="user-info" data-aos="fade-right">
                        <div class="user-avatar">
                            <img src="~/assets/img/person/person-f-1.webp" alt="Profile" loading="lazy">
                            <span class="status-badge"><i class="bi bi-shield-check"></i></span>
                        </div>

                        @if (SignInManager.IsSignedIn(User))
                        {
                            var currentUser = await UserManager.GetUserAsync(User);
                            <h4>@currentUser.UserName</h4>
                            <div class="user-status">
                                <i class="bi bi-award"></i>
                                <span>Member</span>
                            </div>
                        }
                        else
                        {
                            <h4>Guest</h4>
                            <div class="user-status">
                                <i class="bi bi-x-circle"></i>
                                <span>Not Logged In</span>
                            </div>
                        }
                    </div>

                    <!-- Navigation Menu -->
                    <nav class="menu-nav">
                        <ul class="nav flex-column" role="tablist">
                            @await Html.PartialAsync("_AccountTabItem", new { Icon = "bi-box-seam", Title = "My Orders", Href = "orders", Count =orders.Count, IsActive = true })
@*                             @await Html.PartialAsync("_AccountTabItem", new { Icon = "bi-heart", Title = "Wishlist", Href = "wishlist", Count = 12, IsActive = false })
 *@                            @await Html.PartialAsync("_AccountTabItem", new { Icon = "bi-wallet2", Title = "Payment Methods", Href = "wallet", Count = (int?)null, IsActive = false })
                            @await Html.PartialAsync("_AccountTabItem", new { Icon = "bi-star", Title = "My Reviews", Href = "reviews", Count = (int?)null, IsActive = false })
                            @await Html.PartialAsync("_AccountTabItem", new { Icon = "bi-geo-alt", Title = "Addresses", Href = "addresses", Count = (int?)null, IsActive = false })
                            @await Html.PartialAsync("_AccountTabItem", new { Icon = "bi-gear", Title = "Account Settings", Href = "settings", Count = (int?)null, IsActive = false })
                        </ul>
                        <div class="menu-footer">
                            <!--Privacy-->
                            <a asp-action="Privacy" asp-controller="Home" class="help-link">
                                <i class="bi bi-question-circle"></i>
                                <span>Help Center</span>
                            </a>
                            <!--Log Out-->
                            <form id="logoutForm" asp-area="Identity" asp-page="/Account/Logout"
                                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" class="m-0 p-0">

                                <button id="logout" type="submit" class="nav-link text-danger d-flex align-items-center gap-2 bg-transparent border-0">
                                    <i class="bi bi-box-arrow-right"></i>
                                    <span>Log Out</span>
                                </button>
                            </form>
                        </div>
                    </nav>
                </div>
            </div>

            <!-- Content Area -->
            <div class="col-lg-9">
            <div class="content-area">
              <div class="tab-content">
                <!-- Orders Tab -->
                <div class="tab-pane fade show active" id="orders">
                  <div class="section-header" data-aos="fade-up">
                    <h2>My Orders</h2>
                    <div class="header-actions">
                      <div class="search-box">
                        <i class="bi bi-search"></i>
                        <input type="text" placeholder="Search orders...">
                      </div>
                      <div class="dropdown">
                        <button class="filter-btn" data-bs-toggle="dropdown">
                          <i class="bi bi-funnel"></i>
                          <span>Filter</span>
                        </button>
                        <ul class="dropdown-menu">
                          <li><a class="dropdown-item" href="#">All Orders</a></li>
                          <li><a class="dropdown-item" href="#">Processing</a></li>
                          <li><a class="dropdown-item" href="#">Shipped</a></li>
                          <li><a class="dropdown-item" href="#">Delivered</a></li>
                          <li><a class="dropdown-item" href="#">Cancelled</a></li>
                        </ul>
                      </div>
                    </div>
                  </div>

                  <div class="orders-grid">
                    <!-- Order Card 1 -->
                    <div class="order-card" data-aos="fade-up" data-aos-delay="100">
                                

                                    @if (orders.Any())
                                    {
                                        foreach (var order in orders)
                                        {
                                            <div class="order-card mb-4" data-aos="fade-up">
                                                <div class="order-header">
                                                    <div class="order-id">
                                                        <span class="label">Order ID:</span>
                                                        <span class="value">#ORD-@order.Id</span>
                                                    </div>
                                                    <div class="order-date">@order.CreatedAt.ToLocalTime().ToString("MMM dd, yyyy - hh:mm tt")</div>
                                                </div>
                                                <div class="order-content">
                                                    <div class="product-grid">
                                                        @foreach (var item in order.OrderItems)
                                                        {
                                                            if (item == null) { continue; }

                                                            <img src="@((item.Product?.Images?.FirstOrDefault()) ?? Url.Content("~/images/placeholder.png"))" alt="@item.Product?.Name" loading="lazy" />
                                                        }
                                                    </div>
                                                    <div class="order-info">
                                                        <div class="info-row">
                                                            <span>Items</span>
                                                            <span>@order.OrderItems.Count items</span>
                                                        </div>
                                                        <div class="info-row">
                                                            <span>Total</span>
                                                            <span class="price">
                                                                $@order.OrderItems.Sum(i => i.Price * i.Quantity).ToString("0.00")
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="order-footer">
                                                    <button type="button" class="btn-details" data-bs-toggle="collapse" data-bs-target="#details-@order.Id">View Details</button>
                                                </div>

                                                <!-- Order Details -->
                                                
                                                <div class="collapse order-details" id="details-@order.Id">
                                                    <div class="details-content">
                                                        <div class="detail-section">
                                                            <h5>Order Information</h5>
                                                            <div class="info-grid">
                                                                <div class="info-item">
                                                                    <span class="label">Shipping Method</span>
                                                                    <span class="value">Express Delivery (2-3 days)</span>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="detail-section">

                                                            <h5>Items (@order.OrderItems.Count)</h5>


                                                            <div class="order-items">
                                                                @{
                                                                    var items = (order != null && order.OrderItems != null) ? order.OrderItems : Enumerable.Empty<OrderItem>();
                                                                }
                                                               

                                                                @foreach (var item in items)
                                                                {
                                                                    if (item == null) { continue; }

                                                                <div class="item">
                                                                    <img src="@((item.Product?.Images?.FirstOrDefault()) ?? Url.Content("~/images/placeholder.png"))" alt="@item.Product?.Name" loading="lazy" ">
                                                                    <div class="item-info">
                                                                        <h6>@item.Product.Name</h6>
                                                                        <div class="item-meta">
                                                                            <span class="qty">Qty: @item.Quantity</span>
                                                                        </div>
                                                                    </div>
                                                                        <div class="text-end">
                                                                            <div>$@item.Price.ToString("0.00")</div>
                                                                            <div class="small text-muted">Total: $@(item.Price* item.Quantity)</div>
                                                                        </div>
                                                                </div>
                                                                }

                                                            </div>
                                                           
                                                        </div>

                                                        <div class="detail-section">
                                                            <h5>Price Details</h5>
                                                            <div class="price-breakdown">
                                                                <div class="price-row">
                                                                    <span>Subtotal</span>
                                                                    <span>
                                                                        $@order.OrderItems.Sum(i => i.Price * i.Quantity).ToString("0.00")
                                                                    </span>
                                                                </div>
                                                                <div class="price-row">
                                                                    <span>Shipping</span>
                                                                    <span>$0.00</span>
                                                                </div>
                                                                <div class="price-row">
                                                                    <span>Tax</span>
                                                                    <span>0.00</span>
                                                                </div>
                                                                <div class="price-row total">
                                                                    <span>Total</span>
                                                                    <span>
                                                                        $@order.OrderItems.Sum(i => i.Price * i.Quantity).ToString("0.00")
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                       
                                                        <div class="detail-section">
                                                                <h5>Shipping Address</h5>
                                                            <div class="address-info">
                                                                    <p>
                                                                        @order.Address.ContactName <br />
                                                                        @order.Address.Line1 <br />
                                                                        @order.Address.Line2 <br />
                                                                        @order.Address.City, @order.Address.State @order.Address.PostalCode <br />
                                                                        @order.Address.Country
                                                                    </p>                                                               
                                                                    <p class="contact">@order.Address.Phone</p>
                                                            </div>
                                                        </div>
                                                    
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <p class="text-muted">You have no orders yet.</p>
                                    }

                        </div>
                    

                  </div>

                  <!-- Pagination -->
                  <div class="pagination-wrapper" data-aos="fade-up">
                    <button type="button" class="btn-prev" disabled="">
                      <i class="bi bi-chevron-left"></i>
                    </button>
                    <div class="page-numbers">
                      <button type="button" class="active">1</button>
                      <button type="button">2</button>
                      <button type="button">3</button>
                      <span>...</span>
                      <button type="button">12</button>
                    </div>
                    <button type="button" class="btn-next">
                      <i class="bi bi-chevron-right"></i>
                    </button>
                  </div>
                </div>


               
                <!-- Addresses Tab -->
                <div class="tab-pane fade" id="addresses">
                  <div class="section-header" data-aos="fade-up">
                    <h2>My Addresses</h2>
                                <div class="header-actions">
                                    <button type="button" class="btn-add-new" id="btnAddAddress">
                                        <i class="bi bi-plus-lg"></i> Add New Address
                                    </button>
                                </div>

                                <div id="addFormContainer"></div> <!-- الفورم هيتحقن هنا -->

                    </div>
                 
                            @if (TempData["Msg"] is string msge && !string.IsNullOrWhiteSpace(msge))
                            {
                                <div class="alert alert-info">@msge</div>
                            }
@*                             addresses-grid
 *@                    <div id="addressesGrid">
                                @await Html.PartialAsync("~/Views/AddressesMvc/_List.cshtml", Model /* لو الصفحة Strongly typed */)
                            </div>
                </div>

                <!-- Settings Tab -->
                <div class="tab-pane fade" id="settings">
                  <div class="section-header" data-aos="fade-up">
                    <h2>Account Settings</h2>
                  </div>

                  <div class="settings-content">
                    <!-- Personal Information -->
                           

                                @if (SignInManager.IsSignedIn(User))
                                {
                                    var currentUser = await UserManager.GetUserAsync(User);
                                 
                                    <div class="settings-section" data-aos="fade-up">
                                        <h3>Personal Information</h3>
                                        <form asp-area="" asp-controller="Account" asp-action="UpdateProfile" method="post" class="settings-form">
                                            @Html.AntiForgeryToken()
                                            <div class="row g-3">
                                                <div class="col-md-6">
                                                    <label for="firstName" class="form-label">First Name</label>
                                                    <input name="FirstName" type="text" class="form-control" id="firstName" value="@firstName" required>
                                                </div>
                                                <div class="col-md-6">
                                                    <label for="lastName" class="form-label">Last Name</label>
                                                    <input name="LastName" type="text" class="form-control" id="lastName" value="@lastName" required>
                                                </div>
                                                <div class="col-md-6">
                                                    <label for="email" class="form-label">Email</label>
                                                    <input name="Email" type="email" class="form-control" id="email" value="@currentUser.Email" required>
                                                </div>
                                                <div class="col-md-6">
                                                    <label for="phone" class="form-label">Phone</label>
                                                    <input name="PhoneNumber" type="tel" class="form-control" id="phone" value="@currentUser.PhoneNumber">
                                                </div>
                                            </div>

                                            <div class="form-buttons">
                                                <button type="submit" class="btn-save">Save Changes</button>
                                            </div>
                                        </form>

                                    </div>
                                }
                                else
                                {
                                    <div class="settings-section" data-aos="fade-up">
                                        <h3>Personal Information</h3>
                                        <form class="php-email-form settings-form">
                                    <h4>Guest</h4>
                                    <div class="user-status">
                                        <i class="bi bi-x-circle"></i>
                                        <span>Not Logged In</span>
                                    </div>
                                    </form>
                                    </div>
                                }

                    <!-- Security Settings -->
                                <div class="settings-section" data-aos="fade-up" data-aos-delay="200">
                                    <h3>Security</h3>

                                    <form asp-area="" asp-controller="Account" asp-action="ChangePassword" method="post" class="settings-form">
                                        @Html.AntiForgeryToken()

                                        <div class="row g-3">
                                            <div class="col-md-12">
                                                <label for="currentPassword" class="form-label">Current Password</label>
                                                <input name="CurrentPassword" type="password" class="form-control" id="currentPassword" required>
                                            </div>
                                            <div class="col-md-6">
                                                <label for="newPassword" class="form-label">New Password</label>
                                                <input name="NewPassword" type="password" class="form-control" id="newPassword" required>
                                            </div>
                                            <div class="col-md-6">
                                                <label for="confirmPassword" class="form-label">Confirm Password</label>
                                                <input name="ConfirmPassword" type="password" class="form-control" id="confirmPassword" required>
                                            </div>
                                        </div>

                                        <div class="form-buttons mt-3">
                                            <button type="submit" class="btn-save btn btn-primary">Update Password</button>
                                        </div>
                                    </form>

                                    @* (اختياري) عرض رسالة نجاح/خطأ *@
                                    @if (TempData["PwdMsg"] is string msgg && !string.IsNullOrWhiteSpace(msgg))
                                    {
                                        <div class="alert alert-info mt-3">@msgg</div>
                                    }
                                    <div asp-validation-summary="All" class="text-danger mt-2"></div>
                                </div>


                    <!-- Delete Account -->
                                <div class="settings-section danger-zone" data-aos="fade-up" data-aos-delay="300">
                                    <h3>Delete Account</h3>
                                    <div class="danger-zone-content">
                                        <p>Once you delete your account, there is no going back. Please be certain.</p>

                                        <form asp-area="" asp-controller="Account" asp-action="DeleteAccount" method="post" onsubmit="return confirm('Are you sure? This cannot be undone.');">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn-danger btn btn-outline-danger">
                                                Delete Account
                                            </button>
                                        </form>
                                    </div>
                                </div>

                  </div>
                </div>
              </div>
            </div>
          </div>       
        </div>
    </div>
</section>
@section Scripts {
    <script>

  document.addEventListener("DOMContentLoaded", function () {
    if (window.location.hash) {
        var target = document.querySelector('a[href="' + window.location.hash + '"]');
        if (target) {
            new bootstrap.Tab(target).show();
        }
    }
  });

        (() => {
          const btnAdd = document.getElementById("btnAddAddress");
          const host   = document.getElementById("addFormContainer");
          const grid   = document.getElementById("addressesGrid"); // خلي الـ div ده يلفّ كل cards

          if (!host || !grid) {
            console.warn("addressesGrid/addFormContainer not found");
          }

          /* ========================
             1) Load CREATE form
             ======================== */
          if (btnAdd && host) {
            btnAdd.addEventListener("click", async () => {
              try {
                const r = await fetch("/AddressesMvc/CreateInline", { credentials: "same-origin" });
                host.innerHTML = await r.text();
                wireUpCreateForm(); // اربط الايفنتات
                host.scrollIntoView({behavior:"smooth", block:"center"});
              } catch (e) {
                console.error(e);
                alert("Couldn't load form.");
              }
            });
          }

          function wireUpCreateForm() {
            const form   = host.querySelector("#createAddressForm");
            const cancel = host.querySelector("#cancelAdd");
            if (!form) return;

            cancel?.addEventListener("click", () => host.innerHTML = "");

            form.addEventListener("submit", async (e) => {
              e.preventDefault();
              const token = form.querySelector('input[name="__RequestVerificationToken"]')?.value;

              const res = await fetch(form.action, {
                method: "POST",
                body: new FormData(form), // التوكن ضمن الـ FormData
                headers: token ? { "RequestVerificationToken": token } : {},
                credentials: "same-origin"
              });

              const ct  = res.headers.get("content-type") || "";
              const txt = await res.text();

              if (!res.ok) {
                if (ct.includes("text/html")) {
                  host.innerHTML = txt;   // عرض أخطاء الفاليديشن
                  wireUpCreateForm();
                } else {
                  alert("Failed: " + res.status + "\n" + txt);
                }
                return;
              }

              // بعد النجاح الكنترولر بيرجع _List
              if (ct.includes("text/html")) {
                grid.innerHTML = txt;     // تحديث الجريد
                host.innerHTML = "";      // إغلاق الفورم
              } else if (ct.includes("application/json")) {
                try { const data = JSON.parse(txt); if (data?.success) location.reload(); } catch {}
              } else {
                location.reload();
              }
            });
          }

          /* ========================
             2) Open EDIT form (delegation)
             ======================== */
          document.addEventListener("click", async (e) => {
            const a = e.target.closest(".btn-edit[data-edit-id]");
            if (!a) return;
            e.preventDefault();

            const id = a.getAttribute("data-edit-id");
            try {
              const r = await fetch(`/AddressesMvc/EditInline?id=${encodeURIComponent(id)}`, { credentials:"same-origin" });
              if (!r.ok) { alert("Failed to load edit form."); return; }
              host.innerHTML = await r.text();
              wireUpEditForm();
              host.scrollIntoView({behavior:"smooth", block:"center"});
            } catch (err) {
              console.error(err);
              alert("Network error.");
            }
          });

          function wireUpEditForm() {
            const form   = host.querySelector("#editAddressForm");
            const cancel = host.querySelector("#cancelEdit");
            if (!form) return;

            cancel?.addEventListener("click", () => host.innerHTML = "");

            form.addEventListener("submit", async (e) => {
              e.preventDefault();

              const token = form.querySelector('input[name="__RequestVerificationToken"]')?.value;
              const res = await fetch(form.action, {
                method: "POST",
                body: new FormData(form),
                headers: token ? { "RequestVerificationToken": token } : {},
                credentials: "same-origin"
              });

              const ct = res.headers.get("content-type") || "";
              const txt = await res.text();

              if (!res.ok) {
                if (ct.includes("text/html")) {
                  host.innerHTML = txt; // اخطاء فاليديشن
                  wireUpEditForm();
                } else {
                  alert("Save failed: " + res.status);
                }
                return;
              }

              // رجّع _List بعد النجاح
              if (ct.includes("text/html")) {
                grid.innerHTML = txt;
                host.innerHTML = "";
              } else {
                location.reload();
              }
            });
          }

          /* =========================================
             3) Delete / MakeDefault via ajax (delegation)
             ========================================= */
          grid?.addEventListener("submit", async (e) => {
            const form = e.target;
            if (!(form instanceof HTMLFormElement)) return;
            if (!form.dataset.ajax) return; // حط data-ajax="true" على فورم الحذف/الديفولت

            e.preventDefault();
            const token = form.querySelector('input[name="__RequestVerificationToken"]')?.value;
            const action = form.dataset.action; // "Delete" or "MakeDefault"

            const res = await fetch(`/AddressesMvc/${action}`, {
              method: "POST",
              body: new FormData(form),
              headers: token ? { "RequestVerificationToken": token } : {},
              credentials: "same-origin"
            });

            const txt = await res.text();
            if (!res.ok) {
              alert("Failed: " + res.status + "\n" + txt);
              return;
            }

            // الكنترولر بيرجع _List
            grid.innerHTML = txt;
          });
        })();
    </script>
}
