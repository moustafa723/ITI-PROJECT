@model StyleHub.Models.Cart

@{
    Layout = "~/Views/Shared/_Layout_Style_hub.cshtml";

}

<section id="cart" class="cart section">
    <div class="container" data-aos="fade-up" data-aos-delay="100">

        <div class="row">
            <!-- Cart Items -->
            <div class="col-lg-8" data-aos="fade-up" data-aos-delay="200">
                <div class="cart-items">

                    <!-- Header Row -->
                    <div class="cart-header d-none d-lg-block">
                        <div class="row align-items-center">
                            <div class="col-lg-6">
                                <h5>Product</h5>
                            </div>
                            <div class="col-lg-2 text-center">
                                <h5>Price</h5>
                            </div>
                            <div class="col-lg-2 text-center">
                                <h5>Quantity</h5>
                            </div>
                            <div class="col-lg-2 text-center">
                                <h5>Total</h5>
                            </div>
                        </div>
                    </div>

                    <!-- Loop through cart items -->
                    @foreach (var item in Model.CartItems)
                    {
                        <div class="cart-item">
                            <div class="row align-items-center">
                                <!-- Product -->
                                <div class="col-lg-6 col-12 mt-3 mt-lg-0 mb-lg-0 mb-3">
                                    <div class="product-info d-flex align-items-center">
                                        <div class="product-image">
                                            <img src="@item.Product.Images?.FirstOrDefault()" alt="@item.Product.Name" class="img-fluid" />
                                        </div>
                                        <div class="product-details">
                                            <h6 class="product-title">@item.Product.Name</h6>
                                            
                                            <form asp-action="RemoveItem" method="post">
                                                <input type="hidden" name="cartId" value="@Model.Id" />
                                                <input type="hidden" name="productId" value="@item.ProductId" />
                                                <button type="submit" class="btn btn-link text-danger">
                                                    <i class="bi bi-trash"></i> Remove
                                                </button>
                                            </form>

                                        </div>
                                    </div>
                                </div>

                                <!-- Price -->
                                <div class="col-lg-2 col-12 text-center">
                                    <span class="current-price">EGP @item.Product.Price</span>
                                </div>

                                <!-- Quantity -->
                                <div class="col-lg-2 col-12 mt-3 mt-lg-0 text-center">
                                    <div class="quantity-selector">
                                        <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                            <input type="hidden" name="cartId" value="1" /> <!-- hardcoded for now -->
                                            <input type="hidden" name="productId" value="@item.ProductId" />
                                            <input type="hidden" name="quantity" value="-1" min="1" />
                                            <button type="submit" class="btn primary-action">
                                                -
                                            </button>
                                        </form>
                                        <input type="number" class="quantity-input" value="@item.Quantity" min="1" max="10" readonly>
                                        <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                            <input type="hidden" name="cartId" value="1" /> <!-- hardcoded for now -->
                                            <input type="hidden" name="productId" value="@item.ProductId" />
                                            <input type="hidden" name="quantity" value="1" min="1" />
                                            <button type="submit" class="btn primary-action">
                                                +
                                            </button>
                                        </form>

                                    </div>
                                </div>

                                <!-- Item Total -->
                                <div class="col-lg-2 col-12 text-center">
                                    <span>$@(item.Product.Price* item.Quantity)</span>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="cart-actions">
                        <div class="row">
                            <div class="col-lg-6 mb-3 mb-lg-0">
                                <div class="coupon-form">
                                    <div class="input-group">
                                        <input type="text" class="form-control" placeholder="Coupon code">
                                        <button class="btn btn-outline-accent" type="button">Apply Coupon</button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 text-md-end">
                                <form asp-controller="Cart" asp-action="ClearCart" asp-route-id="@Model.Id" method="post">
                                    <button type="submit" class="btn btn-outline-remove">
                                        <i class="bi bi-trash"></i> Clear Cart
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                    <!-- Cart Actions -->

                </div>
            </div>
            <div class="col-lg-4 mt-4 mt-lg-0" data-aos="fade-up" data-aos-delay="300">
                <div class="cart-summary">
                    <h4 class="summary-title">Order Summary</h4>

                    <div class="summary-item">
                        <span class="summary-label">Subtotal</span>
                        <span class="summary-value">EGP </span>
                    </div>

                    <div class="summary-item shipping-item">
                        <span class="summary-label">Shipping</span>
                        <div class="shipping-options">
                            <div class="form-check text-end">
                                <input class="form-check-input" type="radio" name="shipping" value="4.99" id="standard" checked>
                                <label class="form-check-label" for="standard">Standard Delivery - $4.99</label>

                            </div>
                            <div class="form-check text-end">
                                <input class="form-check-input" type="radio" name="shipping" value="12.99" id="express">
                                <label class="form-check-label" for="express">Express Delivery - $12.99</label>
                            </div>
                            <div class="form-check text-end">
                                <input class="form-check-input" type="radio" name="shipping" value="0" id="free">
                                <label class="form-check-label" for="free">Free Shipping (Orders over $300)</label>
                            </div>
                        </div>
                    </div>

                    <div class="summary-item">
                        <span class="summary-label">Tax</span>
                        <span class="summary-value">$0</span>
                    </div>

                    <div class="summary-item discount">
                        <span class="summary-label">Discount</span>
                        <span class="summary-value">-$0.00</span>
                    </div>

                    <div class="summary-total">
                        <span class="summary-label">Total</span>
                        <span class="summary-value">EGP </span>
                    </div>

                    <div class="checkout-button">
                        <a asp-controller="Checkout" asp-action="Index" asp-route-cartId="@Model.Id" class="btn btn-accent w-100">
                            Proceed to Checkout <i class="bi bi-arrow-right"></i>
                        </a>
                    </div>

                    <div class="continue-shopping">
                        <a href="/" class="btn btn-link w-100">
                            <i class="bi bi-arrow-left"></i> Continue Shopping
                        </a>
                    </div>

                    <div class="payment-methods">
                        <p class="payment-title">We Accept</p>
                        <div class="payment-icons">
                            <i class="bi bi-credit-card"></i>
                            <i class="bi bi-paypal"></i>
                            <i class="bi bi-wallet2"></i>
                            <i class="bi bi-bank"></i>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>

</section>
@section Scripts
{
    <script>
        if (!window.quantityScriptLoaded) {
            window.quantityScriptLoaded = true;

            document.addEventListener("DOMContentLoaded", function () {
                const increaseBtns = document.querySelectorAll(".quantity-btn.increase");
                const decreaseBtns = document.querySelectorAll(".quantity-btn.decrease");
                const shippingRadios = document.querySelectorAll("input[name='shipping']");
                const TAX = 27;

                function updateSummary() {
                    let subtotal = 0;
                    document.querySelectorAll(".cart-item").forEach(item => {
                        const quantity = parseInt(item.querySelector(".quantity-input").value);
                        const price = parseFloat(item.querySelector(".current-price").textContent.replace("EGP", "").trim());
                        subtotal += price * quantity;
                    });

                    // تحديث Subtotal
                    const subtotalSpan = document.querySelector(".summary-item .summary-value");
                    if (subtotalSpan) subtotalSpan.textContent = `EGP ${subtotal.toFixed(2)}`;

                    let shippingCost = 4.99; // default
                    const standardRadio = document.getElementById("standard");
                    const expressRadio = document.getElementById("express");
                    const freeRadio = document.getElementById("free");

                    if (subtotal >= 300) {
                        shippingCost = 0;
                        if (freeRadio) freeRadio.checked = true;
                    } else {
                        // لو subtotal أقل من 300، ارجع الشحن اللي كان مختار (Standard أو Express)
                        if (freeRadio) freeRadio.checked = false;
                        if (standardRadio && standardRadio.checked) shippingCost = parseFloat(standardRadio.value);
                        if (expressRadio && expressRadio.checked) shippingCost = parseFloat(expressRadio.value);
                    }

                    // تحديث Total
                    const totalSpan = document.querySelector(".summary-total .summary-value");
                    if (totalSpan) totalSpan.textContent = `EGP ${(subtotal + shippingCost ).toFixed(2)}`;
                }

                function updateTotal(cartItem, quantity) {
                    const price = parseFloat(cartItem.querySelector(".current-price").textContent.replace("EGP", "").trim());
                    const totalSpan = cartItem.querySelector(".item-total span");
                    totalSpan.textContent = `EGP ${(price * quantity).toFixed(2)}`;
                }

                function updateSession(productId, quantity) {
                    fetch('/Cart/UpdateQuantity', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ ProductId: parseInt(productId), Quantity: quantity })
                    });
                }

                increaseBtns.forEach(btn => {
                    btn.addEventListener("click", function (e) {
                        e.preventDefault();
                        const input = this.parentElement.querySelector(".quantity-input");
                        const max = parseInt(input.getAttribute("max"));
                        let quantity = parseInt(input.value);
                        if (quantity < max) quantity += 0;
                        input.value = quantity;
                        updateTotal(this.closest(".cart-item"), quantity);
                        updateSession(this.getAttribute("data-id"), quantity);
                        updateSummary();
                        updateCartCount();

                    });
                });

                decreaseBtns.forEach(btn => {
                    btn.addEventListener("click", function (e) {
                        e.preventDefault();
                        const input = this.parentElement.querySelector(".quantity-input");
                        const min = parseInt(input.getAttribute("min"));
                        let quantity = parseInt(input.value);
                        if (quantity > min) quantity -= 0;
                        input.value = quantity;
                        updateTotal(this.closest(".cart-item"), quantity);
                        updateSession(this.getAttribute("data-id"), quantity);
                        updateSummary();
                        updateCartCount();

                    });
                });

                shippingRadios.forEach(input => {
                    input.addEventListener("change", function () {
                        const cost = parseFloat(this.value);
                        // حفظ الشحن في السيشن
                        fetch('/Cart/UpdateShipping', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ ShippingCost: cost })
                        });
                        updateSummary();
                    });
                });

                // تحديث أول مرة عند تحميل الصفحة
                updateSummary();
            });
        }
    </script>
}
