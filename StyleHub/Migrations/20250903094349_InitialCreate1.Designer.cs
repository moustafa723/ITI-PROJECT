// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITI_FinalProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250903094349_InitialCreate1")]
    partial class InitialCreate1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITI_FinalProject.Models.Catogery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("productId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Totalamount")
                        .HasColumnType("real");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("payment")
                        .HasColumnType("bit");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Quentity")
                        .HasColumnType("int");

                    b.Property<double>("unitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("in_stock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.Catogery", b =>
                {
                    b.HasOne("ITI_FinalProject.Models.product", null)
                        .WithMany("catogeries")
                        .HasForeignKey("productId");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.Order", b =>
                {
                    b.HasOne("ITI_FinalProject.Models.OrderItem", null)
                        .WithMany("Orders")
                        .HasForeignKey("OrderItemId");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.User", b =>
                {
                    b.HasOne("ITI_FinalProject.Models.User", null)
                        .WithMany("users")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.product", b =>
                {
                    b.HasOne("ITI_FinalProject.Models.OrderItem", null)
                        .WithMany("products")
                        .HasForeignKey("OrderItemId");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.OrderItem", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("products");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.User", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("ITI_FinalProject.Models.product", b =>
                {
                    b.Navigation("catogeries");
                });
#pragma warning restore 612, 618
        }
    }
}
